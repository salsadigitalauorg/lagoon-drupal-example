ARG IMAGE_VERSION=latest

FROM uselagoon/php-7.4-cli:${IMAGE_VERSION}

# Install wp-cli
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp && chmod +x /usr/local/bin/wp

# Add function to .bashrc to run wp-cli with --allow-root
RUN echo 'wp() { /usr/local/bin/wp "$@" --allow-root; }' >>  ~/.bashrc \
    && mkdir -p ~/.wp-cli \
    && echo "path: '/app/web/wp'" > ~/.wp-cli/config.yml

RUN COMPOSER_MEMORY_LIMIT=-1 composer install --no-dev
RUN mkdir -p -v -m775 /app/web/content/uploads/

COPY .docker/wordpress/wp-config.php /app/web/wp-config.php
COPY . /app

# Define where the application root is located
ENV WEBROOT=web
ENV PAGER=less

# Install ahoy for wrapped commands
RUN curl -L "https://github.com/ahoy-cli/ahoy/releases/download/2.0.0/ahoy-bin-linux-amd64" -o /usr/local/bin/ahoy &&\
    chmod +x /usr/local/bin/ahoy

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
